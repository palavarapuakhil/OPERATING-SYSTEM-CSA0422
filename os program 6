#include <stdio.h>

int main()
{
    int n = 3;  
    int max_matrix[3][3] = {{3, 6, 8}, {4, 3, 3}, {3, 4, 4}};  
    int allocation_matrix[3][3] = {{3, 3, 3}, {2, 0, 3}, {1, 2, 4}};  
    int available_resources[3] = {1, 2, 0}; 
    int need_matrix[3][3]; 
    int work[3];  
    int finish[3] = {0}; 
    int i, j, k, count = 0, safe = 0;
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            need_matrix[i][j] = max_matrix[i][j] - allocation_matrix[i][j];
        }
    }
    for (i = 0; i < n; i++) {
        work[i] = available_resources[i];
    }
    while (count < n) {
        for (i = 0; i < n; i++) {
            if (finish[i] == 0) {
                for (j = 0; j < n; j++) {
                    if (need_matrix[i][j] > work[j]) {
                        break;
                    }
                }
                if (j == n) {
                    for (k = 0; k < n; k++) {
                        work[k] += allocation_matrix[i][k];
                    }
                    finish[i] = 1;
                    count++;
                }
            }
        }
        if (count == n) {
            safe = 1;
            break;
        }
    }
    if (safe == 1) {
        printf("The system is in a safe state.\n");
    } else {
        printf("The system is in a deadlock state.\n");
        printf("The deadlocked processes are: ");
        for (i = 0; i < n; i++) {
            if (finish[i] == 0) {
                printf("P%d ", i);
            }
        }
        printf("\n");
    }

    return 0;
}
