#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>

int main() {
    pid_t pid1, pid2, pid3, pid4;
    
    pid1 = fork();
    if (pid1 == 0) {
        printf("First child process (odd numbers), pid: %d\n", getpid());
        for (int i = 1; i <= 10; i += 2) {
            printf("%d ", i);
        }
        printf("\n");
        return 0;
    }
    
    pid2 = fork();
    if (pid2 == 0) {
        printf("Second child process (even numbers), pid: %d\n", getpid());
        for (int i = 2; i <= 10; i += 2) {
            printf("%d ", i);
        }
        printf("\n");
        return 0;
    }
    
    pid3 = fork();
    if (pid3 == 0) {
        printf("Third child process (multiples of 3), pid: %d\n", getpid());
        for (int i = 3; i <= 30; i += 3) {
            printf("%d ", i);
        }
        printf("\n");
        return 0;
    }
    
    pid4 = fork();
    if (pid4 == 0) {
    )
        printf("Fourth child process (multiples of 5), pid: %d\n", getpid());
        for (int i = 5; i <= 50; i += 5) {
            printf("%d ", i);
        }
        printf("\n");
        return 0;
    }
    printf("Parent process, pid: %d\n", getpid());
    
    // Wait for all child processes to finish
    waitpid(pid1, NULL, 0);
    waitpid(pid2, NULL, 0);
    waitpid(pid3, NULL, 0);
    waitpid(pid4, NULL, 0);
    
    return 0;
}
